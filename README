What is muforth?
~~~~~~~~~~~~~~~~

muforth is a small, simple, fast, indirect-threaded code (ITC) Forth intended
for use as a cross-compiler for microcontrollers and other embedded devices.
It is written in C and its core is very portable. Because of its Forth nature,
it is naturally extensible, scriptable, and customizable.

It is very well-suited to interactive coding, debugging, and exploration, and
is a great tool for bringing up new hardware.

It has support - in varying degrees of completeness - for the following
architectures:

  * ARMv5 (originally targeting an ARM AEB-1 board running an ARM7DI
    processor)

  * ARMv6-m and ARMv7-m - aka Cortex-M0, M0+, M3, and M4

  * Atmel AVR

  * Motorola/Freescale/NXP HC08 and HCS08

  * RISC-V (initially targeting the SiFive FE310)

  * TI MSP430


Why yet another Forth?
~~~~~~~~~~~~~~~~~~~~~~

There is a saying in the Forth community:

  When you've seen one Forth... you've seen one Forth!

I initially wrote muforth because I wanted to try out some implementation
ideas. These days there is very little that distinguishes muforth from
fig-FORTH - but the differences tend to go rather deep.

Its implementation is no longer the point. Its sole reason for existing
is to be a cross/meta/target-compiler for _other_ Forths, and their
implementations are in no way tied to muforth's.


Starting points
~~~~~~~~~~~~~~~

BUILDING will tell you how to build muforth. It's stupid simple.

Sadly, there isn't a lot of documentation right now. A good place to start is
to read the source. It's generally well-commented, and is intended to be read
and understood. mu/startup.mu4 is the heart of the system.

Look in mu/target/ to find a target that interests you and start reading the
code!

http://muforth.nimblemachines.com/ is also, finally, growing its wings.

Above all, enjoy!
