( $Id$

  This file is part of muFORTH; for project details, visit

     http://nimblemachines.com/browse?show=MuForth

  Copyright 1997-2006 David Frech. All rights reserved, and all wrongs
  reversed.

  Licensed under the Apache License, Version 2.0 [the "License"];
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

  or see the file LICENSE in the top directory of this distribution.

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.)

forth

( Generic control structures. This file is loaded my the main startup file
  - startup.mu4 - and can be loaded by metacompilers as well.)

// Architecture-specific code defines the following:
//
//   resolve>     ( src dest)
//   mark>        ( - src)
//   branch,
//   0branch,
//   =0branch,
//   for,
//   ?for,
//   next,
//   \            compile from "compiler" or "inside" chain

: <resolve  (s dest src)  swap resolve> ;   ( generic)

compiler
: =if   (s - src)  =0branch, mark> ;
: if    (s - src)   0branch, mark> ;
: then  (s src)  here resolve> ;
// : else      (s src0 - src1)  branch, mark>  swap  \ then ;

: begin   (s - dest)  here ;
: =until  (s dest -)       \ =if  <resolve ;
: until   (s dest -)        \ if  <resolve ;
: again   (s dest -)    branch, mark>  <resolve ;
: =while  (s dest - src dest)  \ =if  swap ;
: while   (s dest - src dest)   \ if  swap ;
: repeat  (s src dest -)   \ again  \ then ;

( n for .. next         goes n times; 2^wordsize if n=0 )
( n ?for .. next then   goes n times; 0 if n=0 )

: for     (s - dest)      for,         \ begin ;
: ?for    (s - src dest)  ?for, mark>  \ begin ;
: next    (s dest -)      next, mark>  <resolve ;

forth
