( This file is part of muFORTH: http://muforth.nimblemachines.com/

  Copyright 2002-2012 David Frech. All rights reserved, and all wrongs
  reversed. (See the file COPYRIGHT for details.)

( Produces an Intel hex listing of a memory image.)

( 2004-jul-07. Taken from target/v25 and massively streamlined.)

.ifndef >hilo
   ld target/common/16bit.mu4
.then

loading Intel hex

decimal

( Buffer)
variable buf
: b,  buf @ c!  1 buf +! ;
: b!  buf ! ;

: c@+  ( a - a+ n)  dup 1+  swap c@ ;
: nyb,   15 and  >digit  b,  ;
: .byte   dup  4 >>  nyb,  nyb,  ;
: >byte   ( sum a byte - sum+ a)  dup .byte  u+  ;
: >word   ( sum a b1 b2 - sum+ a)  push >byte  pop >byte  ;
                                                    ( sends b1 then b2)
: addr    ( sum ta - sum+ ta)  dup >hilo  >word  ;  ( big endian)
: chunk   ( sum ha # - ha+# sum)   for  c@+  >byte  next  swap  ;
: check   ( sum)  negate  .byte  pad  buf @  over -  type   cr ;
: header  ( n - sum)  pad b!  char : b,  dup .byte  ;
: tag     ( sum ta n - sum+n)  >byte  drop  ;

      (  : count    vaddr    tag       data      checksum )
      ( =====================================================)
: data  ( 'host 'target # - 'host+#)
      dup header   rot addr  0 tag   -rot chunk       check  ;
: end   0 header     0 addr  1 tag                    check  ;

: seg   ( seg)
        2 header     0 addr  2 tag   swap addr drop   check  ;

: ext   ( ext)
        2 header     0 addr  4 tag   swap addr drop   check  ;

: fragment  ( 'host 'target # - 'host+# 'target+#)
   2dup + push   data   pop ;

: chunks    ( 'host 'target #)
   32 /mod  ( r q)  swap push  ?for  32 fragment  next  then
                       pop  =if  ( rem) fragment  0  then
   drop  2drop  end ;


0 .if
z" target/ARM/bootroms/At29c020.bin"  r/o open-file  mmap-file
  ( 256k) 16 /  0 swap  chunks  end
.then
