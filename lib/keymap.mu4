( $Id$

  This file is part of muFORTH; for project details, visit

     http://nimblemachines.com/browse?show=MuForth

  Copyright 1997-2006 David Frech. All rights reserved, and all wrongs
  reversed.

  Licensed under the Apache License, Version 2.0 [the "License"];
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

  or see the file LICENSE in the top directory of this distribution.

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.)

( keymap.mu4 - generic key-vectoring)

( 2002-mar-28. Copied and modified from dforth/v25/terminal.d4)

cr " Keymaps "  file[#

decimal

( My first pass at this idea is this: printable characters - those for
  which "graphic?" is true - should be considered self-inserting: they act
  as themselves. The lower control characters [0 to 31] and DEL [127]
  should be looked up in a table. For now we _ignore_ the high control
  characters [128 to 159].)

( Key handlers. ASCII codes < 32 are control codes and are dispatched
  thru a table of key handlers. Each handler is passed `key' and returns
  a `done' flag: non-zero means terminate the processing loop.

  All entries default to `nope' which leaves `key' on stack as a done flag,
  terminating the loop.)

( Keymap. Self-indexing.)

comment %serving-suggestion%
: do-key-binding  ( keymap)
   key dup rot  execute ( index)  @execute ( dispatch) ; %serving-suggestion%

: keymap  ( default length)
  create  ram push   for dup , next drop  pop
   does>  swap cells + ;

comment %unnecessary%
: attach-keymap  ( submap location)
  ( Compile a piece of code to subindex based on a new key. We want
    to compile something like this:  "<lit> submap do-key-binding ;".)

  here swap !  literal \ do-key-binding \ ^ ;
Just do this instead:
-: subkeymap do-key-binding ;  attachpoint keymap !
 %unnecessary%

( common key names)
: #BS   [   8 ] ;
: #LF   [  10 ] ;
: #CR   [  13 ] ;
: #ESC  [  27 ] ;  ( aka ctrl [ )
: #DEL  [ 127 ] ;

#]file

comment %test%
-: ( echo)  emit 0 ;  256 keymap basic-keymap

: ctrl-key  char ^ emit  64 +  emit space  0 ;
: bind-keys  ( start n)
  for  ['] ctrl-key over basic-keymap ! 1+ next drop ;
0 32 bind-keys

-: emit space  0 ; 128 keymap esc-keymap
-: drop ( ESC)  ." ESC "  key dup esc-keymap @execute ;  #ESC basic-keymap !
-: drop -1 ; #CR basic-keymap !

: process-keys
   tty raw  begin  key dup basic-keymap @execute  until  tty cooked ;

process-keys
 %test%

