( $Id$

  This file is part of muFORTH; for project details, visit

     http://nimblemachines.com/browse?show=MuForth

  Copyright 1997-2006 David Frech. All rights reserved, and all wrongs
  reversed.

  Licensed under the Apache License, Version 2.0 [the "License"];
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

  or see the file LICENSE in the top directory of this distribution.

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.)

( Make a module for AEB-1.)

( 2002-mar-31. Created. Easter Sunday!)

decimal

rom-image

: ,  |, ;
: here  |here ;
: allot  aligned  |h +! ;

( These are copies of the words in startup.mu4, except that they now
  compile into target space. We should figure out how to vector , and
  friends earlier on so we don't have to do gross things like this.)

: parse-copy   ( ch - c")  parse  here |+ scrabble ;
: string,   ( ch)  parse-copy ( c")  c@ 2 +  allot ;
: ,"  here 1+  char "  string, ;  ( compile string, using " as delimiter)

here constant bug  ( debug module)
( magic)  "4d484944 ,
( version & flags) "00010000 ,
( checksum)  here 0 ,
( ro_base)  rom-start ,
( ro_limit)  here rom-start ,
( rw_base)  0 ,
( zi_base)  0 ,
( zi_limit)  0 ,
( self)  rom-start ,
( start)  0 ,
( init)  0 ,
( final)  0 ,
( service)  0 ,
( title)  here 0 ,
( help)  here 0 ,
( cmdtable)  0 ,
( swibase)  0 ,
( swihandler)  0 ,

( now fix up all the forward references)

( TODO: make this automatic: take a name and make both a "title" and
  "help" entry.)

comment help-string
          ,"                 v.vv (dd mmm yyyy)"   help-string
( help)   ," muFORTH         0.01 (2002-oct-17)"  swap |+ !
( title)  ," muFORTH"  swap |+ !
( ro_limit)  here  bug -  swap  |+ +!

( Note: the AEB-1 bootloader _seems_ to have a bug; it _seems_ to calculate
  the checksum over [base, limit+4], so we add a cell as well.)

: checksum  ( from to - n)
   0 -rot cell+  over -  ?for  @+ push  xor  pop  next  then  drop ;

( checksum)  bug |+  here |+  checksum  swap  |+ !

comment %%later
here
code do-nothing
  lr pc mov  c;

%%later

0 [if]
( Create the uuencoded file for this module)
   z" /tmp/module.uue" create-file  dup writes
  'image |#  ( "40000000 "b4000)  uu  close drop  >stdout
[then]

