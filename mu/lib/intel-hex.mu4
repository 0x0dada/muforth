( This file is part of muFORTH: http://muforth.nimblemachines.com/

  Copyright 2002-2016 David Frech. (Read the LICENSE for details.)

( Produces an Intel hex listing of a memory image.)

( 2004-jul-07. Taken from target/v25 and massively streamlined.)

.ifndef >hilo
   ld target/common/endian.mu4
.then

loading Intel hex

decimal

( Buffer)
variable buf
: b,  buf @ c!  1 buf +! ;
: b!  buf ! ;

: nyb,   15 and  >digit  b,  ;
: .ihbyte   dup  4 >>  nyb,  nyb,  ;
: ih>byte   ( sum a byte - sum+ a)  dup .ihbyte  u+  ;
: ih>word   ( sum a b1 b2 - sum+ a)  push ih>byte  pop ih>byte  ;
                                                    ( sends b1 then b2)
: ihaddr    ( sum ta - sum+ ta)  dup >hilo  ih>word  ;  ( big endian)
: ihchunk   ( sum ha # - ha+# sum)   for  c@+ swap  ih>byte  next  swap  ;
: ihcheck   ( sum)  negate  .ihbyte  pad  buf @  over -  type   cr ;
: ihheader  ( n - sum)  pad b!  char : b,  dup .ihbyte  ;
: ihtag     ( sum ta n - sum+n)  ih>byte  drop  ;

      (  : count    vaddr    tag       data      checksum )
      ( =====================================================)
: ihdata  ( 'host 'target # - 'host+#)
        dup ihheader   rot ihaddr  0 ihtag   -rot ihchunk       ihcheck  ;
: ihend   0 ihheader     0 ihaddr  1 ihtag                      ihcheck  ;

: ihseg   ( seg)
          2 ihheader     0 ihaddr  2 ihtag   swap ihaddr drop   ihcheck  ;

: ihext   ( ext)
          2 ihheader     0 ihaddr  4 ihtag   swap ihaddr drop   ihcheck  ;

: ihfragment  ( 'host 'target # - 'host+# 'target+#)
   2dup + push   ihdata   pop ;

: ihchunks    ( 'host 'target #)
   32 /mod  ( r q)  swap push  for  32 ihfragment  next
                      pop  =if  ( rem) ihfragment  0  then
   drop  2drop  end ;


0 .if
z" target/ARM/bootroms/At29c020.bin"  r/o open-file  mmap-file
  ( 256k) 16 /  0 swap  chunks  end
.then
