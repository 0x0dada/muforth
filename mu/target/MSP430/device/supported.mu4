( This file is part of muFORTH: http://muforth.nimblemachines.com/

  Copyright 2002-2016 David Frech. (Read the LICENSE for details.)

( Ideally this will have a way of choosing a supported MSP430 device...

  Right now we default to the MSP430G2553, and only include here the handful
  of equates necessary to get the chat protocol going.)

( Lumping all the device support in here until further notice. Once we have
  a good way to extract chip defines programmatically, we'll do it.)

hex

( First, a few defining words, which we'll use to load the "equates".)
: equ     ( offset)  current preserve  equates constant ;
: vector  ( offset)  equ ;
: reg     ( offset)  equ ;
: |  \ -- ;  ( | ignores the bit-fields that follow each register name)
: aka   .equates. chain' execute ;  ( for making synonyms)

( Vectors)
0fffe vector Vreset
0ffde vector Vbslkey    -- set to 0 to disable mass erase when password wrong

( NOTE: Registers addresses in the range 0010 to 00ff are 8-bit;
                                         0100 to 01ff are 16-bit.)

( SFRs)
0003 equ IFG2

( Port 1)
0020 equ P1IN
0021 equ P1OUT
0022 equ P1DIR
0023 equ P1IFG
0024 equ P1IES
0025 equ P1IE
0026 equ P1SEL
0027 equ P1REN
0041 equ P1SEL2

( Port 2)
0028 equ P2IN
0029 equ P2OUT
002a equ P2DIR
002b equ P2IFG
002c equ P2IES
002d equ P2IE
002e equ P2SEL
002f equ P2REN
0042 equ P2SEL2

( DCO, clock generator)
0053 equ BCSCTL3
0056 equ DCOCTL
0057 equ BCSCTL1
0058 equ BCSCTL2

( UART/SPI - ie, USCI_A0)
005d equ UCA0ABCTL
005e equ UCA0IRTCTL
005f equ UCA0IRRCTL

0060 equ UCA0CTL0
0061 equ UCA0CTL1
0062 equ UCA0BR0
0063 equ UCA0BR1
0064 equ UCA0MCTL
0065 equ UCA0STAT
0066 equ UCA0RXBUF
0067 equ UCA0TXBUF

( SPI/I2C - ie, USCI_B0)
0068 equ UCB0CTL0
0069 equ UCB0CTL1
006a equ UCB0BR0
006b equ UCB0BR1
006c equ UCB0CIE
006d equ UCB0STAT
006e equ UCB0RXBUF
006f equ UCB0TXBUF

0118 equ UCB0OA        ( I2C own address)
011a equ UCB0SA        ( I2C slave address)

( Watchdog timer)
5a00 equ WDTKEY
0120 equ WDTCTL

( Flash memory controller)
0128 equ FCTL1
012a equ FCTL2
012c equ FCTL3

0a500 equ FKEY

( Bits for FCTL1)
0002 equ FERASE  ( segment erase)
0040 equ FWRT

( Bits for FCTL3)
0001 equ FBUSY   ( for RAM-based code)
0010 equ FLOCK
0040 equ FLOCKA  ( lock bit for info segment A)

( Timer madness!)
( NOTE!! The G2553 datasheet is *incredibly* confusing when it comes to
  timers - and a few other things too. They call TAxxx TA0xxx, and TBxxx
  TA1xxx. For starters. I've here used the equates from the family reference
  manual, p369 and p390.)

011e equ TBIV
012e equ TAIV

0160 equ TACTL
0162 equ TACCTL0
0164 equ TACCTL1
0166 equ TACCTL2
0170 equ TAR
0172 equ TACCR0
0174 equ TACCR1
0176 equ TACCR2

0180 equ TBCTL
0182 equ TBCCTL0
0184 equ TBCCTL1
0186 equ TBCCTL2
0190 equ TBR
0192 equ TBCCR0
0194 equ TBCCR1
0196 equ TBCCR2

( Information memory, segment A - calibration constants)
: dco  ( offset)  10f6 +  equ ;

( Offsets from G2553 datasheet, p14.)
0002 dco CAL_DCO_16MHZ
0003 dco CAL_BC1_16MHZ
0004 dco CAL_DCO_12MHZ
0005 dco CAL_BC1_12MHZ
0006 dco CAL_DCO_8MHZ
0007 dco CAL_BC1_8MHZ
0008 dco CAL_DCO_1MHZ
0009 dco CAL_BC1_1MHZ
