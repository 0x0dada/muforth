( This file is part of muFORTH: http://muforth.nimblemachines.com/

  Copyright 2002-2014 David Frech. All rights reserved, and all wrongs
  reversed. (See the file COPYRIGHT for details.)

( Ideally this will have a way of choosing a supported PIC18 device...

  Right now we default to the PIC18F1xK50 and only include here the equates
  necessary to get the USB chat protocol going.)

( Lumping all the device support in here until further notice. Once we have
  a good way to extract chip defines programmatically, we'll do it.)

( I've got a 14K50 here, so let's start with that.)
16 Ki constant #flash
  512 constant #ram  ( excluding the USB ram in bank 2)
( this would be 256 for the 13K50, which has a _space_ in the memory map
  between the ram in bank 0 and the USB ram in bank 2!)
  256 constant #eeprom

hex

( XXX should reg automagically call a) ( from the assembler?)
( or the assembler token consumer could call that on values from equates?)

( First, a few defining words, which we'll use to load the "equates".)
: equ     ( offset)  current preserve  equates constant ;
: vector  ( offset)  equ ;
: reg     ( offset)  equ ;
: |  \ -- ;  ( | ignores the bit-fields that follow each register name)
: aka   .equates. chain' execute ;  ( for making synonyms)

( First, some USB registers:)
0f64 reg UCON    | --      PPBRST  SE0     PKTDIS  USBEN   RESUME  SUSPND  --
0f63 reg USTAT   | --      ENDP3   ENDP2   ENDP1   ENDP0   DIR     PPBI    --
0f62 reg UIR     | --      SOFIF   STALLIF IDLEIF  TRNIF   ACTVIF  UERRIF  URSTIF
0f61 reg UCFG    | UTEYE   --      --      UPUEN   --      FSEN    PPB1    PPB0
0f5c reg UADDR   | --      ADDR6   ADDR5   ADDR4   ADDR3   ADDR2   ADDR1   ADDR0
0f53 reg UEP0    | --      --      --      EPHSHK  EPCONDIS EPOUTEN EPINEN EPSTALL
