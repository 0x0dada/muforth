( rhythm -- rhythm 'compiler' )
( daf  12-jan-93  created )

only forth defs

vocab rhythm
also rhythm defs

decimal

var beats
: store?  beats @ 1+ dup beats ! 7 and 0= if >c, 0 endif ;
: *  2* 1 or  store? ;
: -  2*       store? ;

( ;rhy makes sure the first part of the rhythm gets to the )
( high bit in word; that's why we count the beats. )
also forth ( for - as subt )
: ;rhy ( #beats beat-mask -- )
  swap beats @ - ?dup if 0 do 2* store? loop endif drop toss ;


tcompiler defs  forth  also rhythm
( search forth, compile tcompiler )
( this is so we don't get tcompiler : ; )

: rhy:  ( compile a rhythm )
  also rhythm  0 beats ! 0 ;

: melody: ( #bytes -- )
  0 do bl word here number drop >c, loop ;

only forth defs

