( This file is part of muFORTH: http://muforth.nimblemachines.com/

  Copyright 2002-2010 David Frech. All rights reserved, and all wrongs
  reversed. (See the file COPYRIGHT for details.)

cr " ARM memory allocation "  file[#

( A single memory space.)
256 Ki constant #image
#image buffer image

meta
: cells  2 << ;  ( target cells are 32 bits)
: cell/  2 >> ;  ( signed)
1 \m cells constant cell
: cell+  \m cell + ;
: cell-  \m cell - ;
forth

( We keep of bitmap of which cells need relocation.)
#image \m cell/ ( num of target cells in image)
   3 >> ( num of bytes in bitmap)
   constant #reloc-bitmap

#reloc-bitmap buffer reloc-bitmap

( Mark a target address as needing relocation.)
: index>bit  ( index - byte bit)  dup 3 >>  swap 7 and ;

: 'reloc  ( target-addr - mask a)
   \m cell/  ( convert to cell index)
   index>bit  1 swap << ( mask)  swap  reloc-bitmap + ( mask a) ;

: reloc  ( a)
   dup 7 and  1 swap << ( mask)  swap 3 >> reloc-bitmap +
   dup c@  rot or  swap c! ;

( Basic dictionary words.)
meta
variable h  ( dictionary pointer)
: here  \m h  @ ;
: aligned  [ \m cell negate ] and ;
: align   \m here  \m aligned  \m h ! ;
: allot   \m h +! ;
: ,    \m align  \m here  !  \m cell \m allot ;
: r,   ( relocated)  \m here  reloc  \m , ;
forth


