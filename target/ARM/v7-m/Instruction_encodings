32-bit Thumb2 instruction encodings

Not complete - I've skipped most of these when adding the 32-bit instructions.

But the ldr/str variants are so varied and complex that I want to write them
down here so I can better figure out the encodings.

Load/store double/exclusive

1110 1000 0 101 nnnn   tttt 1111 iiii iiii      ldrex i8 (word offset; added)
1110 1000 1 101 nnnn   tttt 1111 0100 1111      ldrexb (zero offset)
1110 1000 1 101 nnnn   tttt 1111 0101 1111      ldrexh (zero offset)

P = index
U = up (add)
W = writeback

1110 100P U 1W1 nnnn   tttt vvvv iiii iiii      ldrd i8
1110 100P U 101 1111   tttt vvvv iiii iiii      ldrd literal (pc-rel; word offset)

Load/store single

        S   ZZL
1111 1000 u 101 1111   tttt iiii iiii iiii      ldr literal (pc-rel)
1111 1000 u 011 1111   tttt iiii iiii iiii      ldrh literal (pc-rel)
1111 1000 u 001 1111   tttt iiii iiii iiii      ldrb literal (pc-rel)

1111 1000 u 001 1111   1111 iiii iiii iiii      pld (pc-rel)

1111 1001 u 001 1111   tttt iiii iiii iiii      ldrsb literal (pc-rel)
1111 1001 u 011 1111   tttt iiii iiii iiii      ldrsh literal (pc-rel)


S = signed:
   0 = zero extend
   1 = sign extend

B = big offset:
   0 = 8 bit
   1 = 12 bit

ZZ = size
   00 = byte
   01 = halfword
   10 = word
   11 = undefine/reserved/unimplemented ???

L = load
   0 = store
   1 = load

For i8 forms:
   p = index
   u = "up" (add offset)
   w = writeback base register

        S BZZL
1111 1000 0101 nnnn   tttt 0000 00ii mmmm      ldr reg
1111 1000 0100 nnnn   tttt 0000 00ii mmmm      str reg

1111 1000 0101 nnnn   tttt 1puw iiii iiii      ldr i8
1111 1000 0100 nnnn   tttt 1puw iiii iiii      str i8

1111 1000 0101 nnnn   tttt 1110 iiii iiii      ldrt i8
1111 1000 0100 nnnn   tttt 1110 iiii iiii      strt i8

1111 1000 1101 nnnn   tttt iiii iiii iiii      ldr i12
1111 1000 1100 nnnn   tttt iiii iiii iiii      str i12

1111 1000 0001 nnnn   tttt 0000 00ii mmmm      ldrb reg
1111 1000 0001 nnnn   tttt 1puw iiii iiii      ldrb i8
1111 1000 0001 nnnn   tttt 1110 iiii iiii      ldrbt i8
1111 1000 1001 nnnn   tttt iiii iiii iiii      ldrb i12

1111 1000 0001 nnnn   1111 0000 00ii mmmm      pld reg
1111 1000 0001 nnnn   1111 1100 iiii iiii      pld i8  ( negative offset)
1111 1000 1001 nnnn   1111 iiii iiii iiii      pld i12

1111 1000 0011 nnnn   tttt 0000 00ii mmmm      ldrh reg
1111 1000 0011 nnnn   tttt 1puw iiii iiii      ldrh i8
1111 1000 0011 nnnn   tttt 1110 iiii iiii      ldrht i8
1111 1000 1011 nnnn   tttt iiii iiii iiii      ldrh i12

1111 1001 0001 nnnn   tttt 0000 00ii mmmm      ldrsb reg
1111 1001 0001 nnnn   tttt 1puw iiii iiii      ldrsb i8
1111 1001 0001 nnnn   tttt 1110 iiii iiii      ldrsbt i8
1111 1001 1001 nnnn   tttt iiii iiii iiii      ldrsb i12

1111 1001 0011 nnnn   tttt 0000 00ii mmmm      ldrsh reg
1111 1001 0011 nnnn   tttt 1puw iiii iiii      ldrsh i8
1111 1001 0011 nnnn   tttt 1110 iiii iiii      ldrsht i8
1111 1001 1011 nnnn   tttt iiii iiii iiii      ldrsh i12
