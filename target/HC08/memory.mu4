( This file is part of muFORTH: http://muforth.nimblemachines.com/

  Copyright 2002-2009 David Frech. All rights reserved, and all wrongs
  reversed. (See the file COPYRIGHT for details.)

cr  " HC08 memory image " file[#

( Space for compiling into. HC08s can get big; for now let's limit ourselves
  to 60k address space. This is where most of the varieties I'm interested
  in max out.

  XXX: We should really define this in a device/xxx file that gets loaded
  _before_ this one.)

( Represent the entire address space. This way we don't worry about any
  translation issues - like forcing target address fc00 to refer to first
  byte of the image buffer.)

64 Ki constant #image
#image buffer 'image
: |+  'image + ;

( HC08s are big-endian, like all Motorola/Freescale processors!)

-:  |+ c@ ;                                        is |c@
-:  dup |c@ ( hi) 8 <<  swap 1+ |c@ ( lo)  or ;    is |@
2 |cell !  ( size of cell)

: |c!  |+ c! ;
: |!  ( w a)  push  dup 8 >> r@ ( hi) |c!  pop 1+ ( lo) |c! ;

( Dictionary operators.)
variable |h   ( image dictionary pointer pointer; points to one of:)
   variable |flash
   variable |ram

variable |origin   ( code origin pointer - first byte of code compiled here)

( XXX - necessary?)
: |aligned  1 + -2 and ;
: |align  |h @ |aligned |h ! ;

( DEBUG: show code as it's compiled)
: .h  radix @ push  hex <# # # #> type space  pop radix ! ;

: |here  ( - a)  |h @ @ ;
: |allot ( n)    |h @ +! ;
: |c,    ( ch)   dup .h  |here |c!  1 |allot ;
: |,     ( n)    ( |align)  dup 8 >> |c, ( hi)  |c, ( lo) ;
: |#     ( - n)  |here  |origin @  - ;  ( return the number of bytes in image)

( Initialization.)
: wipe   'image  #image  ( erase)   "55  fill ;
: ram       |ram  |h ! ;
: flash   |flash  |h ! ;
: org    ( a) ( set dict pointer)  |h @ ! ;
: image
   wipe
   ram-start  |ram !
   flash-start  |flash ! ;

: origin!  ( set origin)  |here  |origin ! ;

( Defaults)
ram image  origin!

forth

#]file

