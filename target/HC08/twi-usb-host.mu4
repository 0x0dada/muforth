( This file is part of muFORTH: http://muforth.nimblemachines.com/

  Copyright 2002-2013 David Frech. All rights reserved, and all wrongs
  reversed. (See the file COPYRIGHT for details.)

loading TWI over USB (host)

( Host-side code to drive the TWI chat code in
  target/HC08/twi-usb-core.mu4.)

hex

-- : usb  ( bmRequest bRequest wValue wIndex wLength 'buffer)

( Commands:
0-2f  Bye        - exit AVR chat code and return to chat loop
  30  RecvByte   - receive data byte, send ACK/NACK
  31  SendByte   - send data byte, return ACK/NACK
  32  Start      - send START bit
  33  Restart    - send RESTART bit
  34  Stop       - send STOP bit
  35  SlowClock  - set 100k TWI clock  [XXX nop]
  36  FastClock  - set 400k TWI clock  [ditto]
)

( Control reads)
: expect1  ( wValue bReq - byte)   0c0 swap  rot  0  1 pad  usb  pad c@ ;
: twi.RecvByte  ( ack - byte)  30 expect1 ;
: twi.SendByte  ( byte - ack)  31 expect1 ;

: control-write
   create ,  ( bRequest)
   does> @   40 swap  0 0 0 0  usb ;

00  control-write  twi.Bye  ( End session, return to chat command loop)
32  control-write  twi.Start    ( send START bit)
33  control-write  twi.Restart  ( send RESTART bit)
34  control-write  twi.Stop     ( send STOP bit)
35  control-write  twi.SlowClock  ( 100k)
36  control-write  twi.FastClock  ( 400k)

: twi.Hello  ( start the AVR chat firmware on the connected device)
   0f600 u.SetPC u.Run ;

( Some shorthands)
: S   ( start)  twi.Start ;
: PS  ( restart)  twi.Restart ;
: P   ( stop)   twi.Stop ;
: Aw  ( addr+write)  0fe twi.SendByte u. ;
: Ar  ( addr+read)   0ff twi.SendByte u. ;
: W   ( write)  twi.SendByte u. ;
: Ra  ( read)   0 twi.RecvByte ;  ( read and ACK)
: Rn  ( read)   1 twi.RecvByte ;  ( read and NACK)

( The following is test code to talk to my simple "debug stub" running on
  an Atmel AVR.)

: cmd  ( cmd)   S  Aw  W ;

( Goofy names to try this out.)
: z!   ( addr)             >hilo  10 cmd  W  W  P ;
: zp*  ( - b)  ( read prog mem)   11 cmd        PS  Ar  Rn  P ;
: z*   ( - b)  ( read data mem)   12 cmd        PS  Ar  Rn  P ;
: z&   ( b)    ( write data mem)  13 cmd  W     P ;
: zgo                             14 cmd        P ;

: p4  11 cmd  PS  Ar  Ra Ra Ra Rn  P ;
: w4  13 cmd          W  W  W  W   P ;
