DRUMS!!    C O S I

1 is load













( Drums load)
2001 LOAD  3001 LOAD
( serial   fix   )
   : DEBUG  \ //  ;   : EPROM  ;        ( production)
// : DEBUG        ;   : EPROM  \ //  ;  ( debug)
4001 LOAD  5001 LOAD  1003 LOAD  6001 LOAD
( compiler   kernel    TASKs       chat )
DEBUG  7001 LOAD  ( load cold here for debug)
8001 LOAD  ( midicore)   CR ." (( Drums "  4 21 +THRU  ." )) "
EPROM  7001 LOAD  ( load cold here for eprom)
.USER
QUIT  ( set interpreter to target)




( THIS BLOCK MUST CONTAIN A SIGNATURE!!)

SIGN" COSI Liquid Percussion Interactive Sculpture. "
SIGN" Copyright (c) 1995, 1996 "
SIGN" David Frech & Remmy Demmy Productions."



SKIP  Loaded by kernel at start of memory.







( TASKs )       ( THIS BLOCK MUST CONTAIN TASK DEFS!!)
 00   ( don't execute target's '0'!)
( #s  #r  #u)
 128 128  32  BACKGROUND Operator
 128 128  32  BACKGROUND father-time  ( AGES)
 128 128  32  BACKGROUND midi
 128 128  32  BACKGROUND scanner
DEBUG  128 128  32  BACKGROUND debug
                                        CIRCLE Operator







( ports)                                   HEX
: PORTS   0 f00 IO!   c0 f08 IO!  ( data low, strobes hi)
          0 f01 IOW!   ( port0: data, oooo/oooo)
       000f f09 IOW!   ( port1: data, oooo/iiii)
       0080 f11 IOW!   ( port2: data, iooo/oooo)  ;
                                           DECIMAL


SKIP
Ports:
P0 =  S/-R  d6  d5  d4  d3  d2  d1  d0  ( set/reset, data)
P1 =  /perc  /hold  X  X  X  X  /midi  X  ( strobes, low)
P2 =  sense  select6-0  ( drum scan: ixxo/oooo)

/midi shows up as /int on FAT header.

( key histories)
32 CARRAY struck     ( hi bit set if key down)

: CLEAR   struck 32 ERASE  CLEAR  ;  ( call midicore's)












( RANDOM    CHOOSE )     DECIMAL
VARIABLE seed
: RANDOM   seed @   31421 *   6927 +   DUP seed !  ;
                     ( from Starting Forth)

: CHOOSE   ( range - val)  RANDOM  UM* NIP  ;  ( take hi word)

SKIP  Both options...
: RANDOM   seed @   31421 *   6927 +   DUP seed !  ;
                     ( from Starting Forth)

: RANDOM   seed @   13709 *   13849 +   DUP seed !  ;
                     ( from Chamberlin, Mus. App. of uProcs)



( drum pad input)                          HEX
CODE 8SCAN  ( start# - v0..vn n)  IO-SEG #, AX MOV,  AX DS MOV,
   18 #, BX AND, ( sanity)  8 #, CX MOV,  AX AX XOR, ( count)
   BEGIN,  BL F10 ) MOV,  F10 ) DL MOV,  DL DH MOV, ( copy)
   ES: ' struck >DATA [BX] DL XCHG,  ( DL=prev, DH=cur)
   DH DL XOR,  DL DH AND,
                ( true if cur<0 & cur&prev hibits differ)
   0<, IF,  BX PUSH,  AX INC,  THEN,  BX INC,  LOOP,
   AX BX MOV, ( n to top)  CS PUSH,  DS POP,  NEXT,  C;
                                            DECIMAL






( drum pad input)                          DECIMAL
: DRIP  ( scan# -)
   0 SWAP ( status)  16 +  50 ( *600uS)  NOTE-ON  ;

: HITS  ( v0..vn n -)  ?FOR  DRIP  NEXT  THEN  ;
: 8CHECK  ( start -)  PAUSE  8SCAN  HITS  ;
: SCAN  0 8CHECK  8 8CHECK  16 8CHECK  ;    ( very `Chuck'!)









( percussion layout)                            SKIP

BACK      1  3  5  7  9 11 13 15 17 19 21 23    resonators
          higher         lower        higher
FRONT     0  2  4  6  8 10 12 14 16 18 20 22    drums
          B  B  B  S  H  S  H  S  H  B  B  B    B=bass; S=snare;
                                                H=hi tom
Twelve-tone melodies map onto snare and bass groups?  Does this
work?  Really two snare `notes': 20+2, 12+10.  And 4 bass notes:
22+0, 18+4, 16+6, 14+8.  And sometimes single.

What about `skitter' on the resonators?  YES!

Coming up with eight zillion combos isn't interesting.  There
are 4 sequences.  Period.

( drum pattern words)
VARIABLE accented  ( true if this beat is accented)
5 ARRAY instr#   ( bass lotom snare midtom hitom )
5 ARRAY accent#  ( ditto)

( indexes)
00 CONSTANT bass    01 CONSTANT lotom    2 CONSTANT snare
 3 CONSTANT midtom   4 CONSTANT hitom    5 CONSTANT accent

: DRUM  ( index -)  DUP instr# INDEX @ DRIP  accented @ IF
   DUP accent# INDEX @ DRIP  THEN  DROP  ;

: <ACCENT>  ( index -)  DROP  accented ON  ;



( drum pattern words)
: PLAYS  ( index index -)  WHICH
   DRUM  DRUM  DRUM  DRUM  DRUM  <ACCENT>  ;

: BEAT?  ( beat# pattern - f)  SWAP SHIFT 0<  ;
: BEAT   ( beat# index pattern - beat#)  PUSH OVER POP  BEAT?
   IF  DUP PLAYS  ELSE  DROP  THEN  ;

: PLAY  ( beat# 'bass-pat index - beat# 'bass-pat)
   SWAP PUSH ( beat# index; R: 'bass)
   DUP R@ INDEX ROM@ ( beat# index pattern)  BEAT  POP  ;





( drum pattern words)
: ROM@+  ( a - a+2 w)  DUP 2+ SWAP ROM@  ;
: REST   200 MS  ;  ( unless something harder is necessary)

: TUTTI  ( beat# 'bass-pat - beat#+1 'bass-pat)  accented OFF
   accent PLAY  hitom PLAY  midtom PLAY
   snare PLAY   lotom PLAY  bass PLAY     1 +UNDER  ;

:: PATTERN  CREATE
   ( accent hitom midtom snare lotom bass #beats -)
   , , , , , , ,  DOES>  ( pfa -)
   0 SWAP ( beat#)  ROM@+ FOR  TUTTI  REST  NEXT  2DROP  ;




( instrument groups)
:: GROUP  CREATE  ( count, values)  DOES>  ( pfa - instr#)
   ROM@+ CHOOSE  SWAP INDEX ROM@  ;

GROUP 1bass    6 , 00 ,  2 ,  4 , 18 , 20 , 22 ,
GROUP 1lotom   6 , 01 ,  3 ,  5 , 19 , 21 , 23 ,
GROUP 1snare   2 ,  6 , 14 ,   ( accent 10)
GROUP 1midtom  6 ,  7 ,  9 , 11 , 13 , 15 , 17 ,
GROUP 1hitom   2 ,  8 , 16 ,   ( accent 12)

: >INSTR  ( valve# accent# index -)  PUSH  R@ accent# INDEX !
   POP instr# INDEX !  ;




( instrument groups)
: +HITOM   1hitom   12          hitom >INSTR  ;
: +LOTOM   1lotom   24 OVER -   lotom >INSTR  ;
: +SNARE   1snare   10          snare >INSTR  ;
: +MIDTOM  1midtom  24 OVER -  midtom >INSTR  ;
: +BASS    1bass    22 OVER -  ( instr# accent#)  bass >INSTR ;

: TUNE  +BASS  +SNARE  +HITOM  +LOTOM  +MIDTOM  ;








( real patterns)                              HEX
( accent hitom midtom snare lotom bass #beats -)
  0204   0020  00     0400  0002  a304   10  PATTERN funk2
  420a   00    0001   100c  00    c362   10  PATTERN funk5
  4923   0300  1800   c00b  0060  00     10  PATTERN funk-brk5
                                              DECIMAL

: FUNK  funk2  funk2  funk-brk5  funk2     ( aaba)
        funk2  funk2  funk-brk5  funk5  ;  ( aabc)







( real patterns)                              HEX
( accent hitom midtom snare lotom bass #beats -)
  80af   00    80a0   3600  000f  8888  10  PATTERN afrocub5
  8022   00e0  800e   3600  00    8888  10  PATTERN afrocub8
  1111   0100  1010   6666  0001  8888  10  PATTERN afrocub9
  0888   00    1010   2929  0282  8000  10  PATTERN afro-brk2
                                              DECIMAL

: AFROCUB  afrocub5  afrocub5  afro-brk2  afrocub5  ( aaba)
           afrocub5  afrocub8  afro-brk2  afrocub9  ( acbd)  ;






( real patterns)                              HEX
( accent hitom midtom snare lotom bass #beats -)
  8888   8888  000a   2220  00    8282  10  PATTERN chacha1
  8888   8888  0008   8a8a  0002  8282  10  PATTERN chacha2
  0924   8000  0c30   00    0186  00    10  PATTERN cha-brk2
                                              DECIMAL

: CHACHA  chacha1  chacha1  cha-brk2  chacha1     ( aaba)
          chacha1  chacha1  cha-brk2  chacha2  ;  ( aabc)







( real patterns)                              HEX
( accent hitom midtom snare lotom bass #beats -)
  2222   00    a140   00    0416  9999  10  PATTERN samba1
  0110   a000  0d00   0060  000d  9999  10  PATTERN samba4
  28a2   00a0  0b00   e000  000e  9999  10  PATTERN samba-brk1
                                              DECIMAL

: SAMBA   samba1  samba1  samba-brk1  samba1      ( aaba)
          samba4  samba4  samba-brk1  samba1  ;   ( ccba)







( sequences)
: 1GROOVE  ( index -)  TUNE
   24 - WHICH  FUNK  AFROCUB  CHACHA  SAMBA  ;
: GROOVE  ( v0..vn n -)
   ?DUP IF  1- ?FOR DROP NEXT THEN  1GROOVE  THEN ;

: ?SEQUENCE   PAUSE  24 8SCAN  GROOVE  ;
: SCANS  ( 'task -)  ACTIVATE
   BEGIN  SCAN   ?SEQUENCE  AGAIN  ;







( midi support)
: FLAVORS   BEGIN
   scanner SCANS  2 $f08 LOW  scanner OFF
           +MIDI  2 $f08 HIGH  -MIDI  AGAIN  ;

: MIDI-SETUP
   OMNI CHANNEL+ ( set chan1)  +MIDI-IRQ  midi LISTEN  ;









( midi support)
: OK   PORTS  CLEAR  father-time AGES  600 uS  +CLOCK
   MIDI-SETUP   ;

: BOOT  +DIVIDE  MULTI  OK  FLAVORS  ;

EPROM SKIP
: boot  debug ACTIVATE  BOOT  1 AWAIT  ;








