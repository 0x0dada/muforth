( This file is part of muFORTH: http://muforth.nimblemachines.com/

  Copyright 2002-2013 David Frech. All rights reserved, and all wrongs
  reversed. (See the file COPYRIGHT for details.)

.ifndef >hilo     -- don't reload if we've already been loaded

loading Target endianness

( I'm not sure where to put this. It's not specific to a particular target,
  so having it here in target/common/ makes sense.)

( For fetching and storing a series of bytes.)
: c@+  ( a - b a+1)   dup c@  swap 1+ ;
: c!+  ( b a - a+1)  tuck c!       1+ ;

( Little endian.)

( Split and join bytes into 16-bit halfwords.)
: >hilo  ( h - hi lo)  dup 8 u>>  swap [ 1 8 << 1- ] and ;
: lohi>  ( lo hi - h)  8 << or ;

( Split and join bytes into 32-bit words.)
: >3210  ( w - b3 b2 b1 b0)  >hilo push  >hilo push  >hilo  pop pop ;
: 0123>  ( b0 b1 b2 b3 - w)   lohi>       lohi>       lohi> ;

( 16-bit halfword fetch and store.)
: leh@  ( a - h)                  c@+ c@  lohi> ;
: leh!  ( h a)  push  >hilo  pop  c!+ c! ;

( 32-bit fetch and store.)
: lew@  ( a - w)                  c@+ c@+ c@+ c@  0123> ;
: lew!  ( w a)  push  >3210  pop  c!+ c!+ c!+ c! ;

( Big endian.)

( Split and join bytes into 16-bit halfwords.)
: >lohi  ( h - lo hi)  >hilo  swap ;
: hilo>  ( hi lo - h)         swap  lohi> ;

( Split and join bytes into 32-bit words.)
: >0123  ( w - b0 b1 b2 b3)            >lohi      >lohi      >lohi ;
: 3210>  ( b3 b2 b1 b0 - w)  push push  hilo>  pop hilo>  pop hilo> ;

( 16-bit halfword fetch and store.)
: beh@  ( a - h)                  c@+ c@  hilo> ;
: beh!  ( h a)  push  >lohi  pop  c!+ c! ;

( 32-bit fetch and store.)
: bew@  ( a - w)                  c@+ c@+ c@+ c@  3210> ;
: bew!  ( w a)  push  >0123  pop  c!+ c!+ c!+ c! ;

.then
